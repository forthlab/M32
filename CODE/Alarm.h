/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : Alarm.h
**     Project   : ZJM_M32
**     Processor : MC9S08SH8MTJ
**     Component : BitIO
**     Version   : Component 02.075, Driver 03.24, CPU db: 3.00.065
**     Compiler  : CodeWarrior HCS08 C Compiler
**     Date/Time : 2022/3/5, 15:46
**     Abstract  :
**         This component "BitIO" implements an one-bit input/output.
**         It uses one bit/pin of a port.
**         Note: This component is set to work in Output direction only.
**         Methods of this component are mostly implemented as a macros
**         (if supported by target language and compiler).
**     Comment   :
**         输出0: 正常
**         
**         输出1: 异常
**           传感器异常,
**           或者负载异常
**     Settings  :
**         Used pin                    :
**             ----------------------------------------------------
**                Number (on package)  |    Name
**             ----------------------------------------------------
**                       10            |  PTC2_ADP10
**             ----------------------------------------------------
**
**         Port name                   : PTC
**
**         Bit number (in port)        : 2
**         Bit mask of the port        : $0004
**
**         Initial direction           : Output (direction cannot be changed)
**         Initial output value        : 0
**         Initial pull option         : up
**
**         Port data register          : PTCD      [$0004]
**         Port control register       : PTCDD     [$0005]
**
**         Optimization for            : code size
**     Contents  :
**         PutVal - void Alarm_PutVal(bool Val);
**         ClrVal - void Alarm_ClrVal(void);
**         SetVal - void Alarm_SetVal(void);
**
**     Copyright : 1997 - 2010 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

#ifndef Alarm_H_
#define Alarm_H_

/* MODULE Alarm. */

  /* Including shared modules, which are used in the whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
#include "Cpu.h"


/*
** ===================================================================
**     Method      :  Alarm_PutVal (component BitIO)
**
**     Description :
**         This method writes the new output value.
**     Parameters  :
**         NAME       - DESCRIPTION
**         Val             - Output value. Possible values:
**                           FALSE - logical "0" (Low level)
**                           TRUE - logical "1" (High level)
**     Returns     : Nothing
** ===================================================================
*/
void Alarm_PutVal(bool Val);

/*
** ===================================================================
**     Method      :  Alarm_ClrVal (component BitIO)
**
**     Description :
**         This method clears (sets to zero) the output value.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
#define Alarm_ClrVal() ( \
    (void)clrReg8Bits(PTCD, 0x04)      /* PTCD2=0x00 */ \
  )

/*
** ===================================================================
**     Method      :  Alarm_SetVal (component BitIO)
**
**     Description :
**         This method sets (sets to one) the output value.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/
#define Alarm_SetVal() ( \
    (void)setReg8Bits(PTCD, 0x04)      /* PTCD2=0x01 */ \
  )



/* END Alarm. */
#endif /* #ifndef __Alarm_H_ */
/*
** ###################################################################
**
**     This file was created by Processor Expert 3.09 [04.41]
**     for the Freescale HCS08 series of microcontrollers.
**
** ###################################################################
*/
