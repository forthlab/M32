/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : IFsh1.h
**     Project   : ZJM_M32
**     Processor : MC9S08SH8MTJ
**     Component : IntFLASH
**     Version   : Component 02.364, Driver 01.28, CPU db: 3.00.065
**     Compiler  : CodeWarrior HCS08 C Compiler
**     Date/Time : 2022/3/5, 15:46
**     Abstract  :
**         This component "IntFLASH" implements an access to internal FLASH.
**         The component support reading/writing data into FLASH, erasing of
**         selected sector.
**         The component supports events if the write interrupt is supported.
**         The component supports following modes of write operations:
**           - Write - writing without any test.
**           - Destructive write - sector is erased if necessary.
**           - Safe write - user event is invoked to save and resore data
**                          from the current sector.
**         The component requires on-chip FLASH memory (not used/allocated by
**         other components).
**     Settings  :
**         Total FLASH memory size       : 0x2000 bytes
**         Number of FLASH memory blocks : 1
**         Flash block
**           Address range               : 0xE000-0xFFFF
**           Size                        : 0x2000
**           Sector size                 : 0x0200
**         Write method                  : Destructive write (with erase)
**         Wait in RAM                   : yes
**         Virtual page                  : Disabled
**         CPU clock/speed selection
**           FLASH clock                 : 181.82 kHz
**           High speed mode             : This component enabled
**     Contents  :
**         EraseSector   - byte IFsh1_EraseSector(IFsh1_TAddress Addr);
**         SetByteFlash  - byte IFsh1_SetByteFlash(IFsh1_TAddress Addr, byte Data);
**         SetWordFlash  - byte IFsh1_SetWordFlash(IFsh1_TAddress Addr, word Data);
**         SetBlockFlash - byte IFsh1_SetBlockFlash(IFsh1_TDataAddress Source, IFsh1_TAddress Dest, word...
**         GetBlockFlash - byte IFsh1_GetBlockFlash(IFsh1_TAddress Source, IFsh1_TDataAddress Dest, word...
**         DataPtr2Addr  - IFsh1_TAddress IFsh1_DataPtr2Addr(void* Addr);
**         FuncPtr2Addr  - IFsh1_TAddress IFsh1_FuncPtr2Addr(void(*Addr)());
**
**     Copyright : 1997 - 2010 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

#ifndef __IFsh1
#define __IFsh1

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited components */

#include "Cpu.h"
/* MODULE IFsh1. */

/* Number of flash memory areas. */
#define IFsh1_AREA_COUNT                1
/* Flash area 0 start address (in the format used by component methods). */
#define IFsh1_AREA_0_START              0xE000U
/* Flash area 0 size (in bytes). */
#define IFsh1_AREA_0_SIZE               0x2000U
/* Flash area 0 last address (in the format used by component methods). */
#define IFsh1_AREA_0_END                0xFFFFU
/* Flash area 0 sector size: minimal erasable unit (in bytes). */
#define IFsh1_AREA_0_SECTOR_SIZE        0x0200U
/* Flash area sector size valid for all areas: minimal erasable unit (in bytes). */
#define IFsh1_AREA_SECTOR_SIZE          0x0200U
/* Size of programming phrase, i.e. number of bytes that must be programmed at once */
#define IFsh1_PROGRAMMING_PHRASE       (0x01U)
/* TRUE if the component setting allows clear bits of already programmed flash memory location without destruction of the value in surrounding addresses by sector erase. */
#define IFsh1_ALLOW_CLEAR              (FALSE)


#ifndef __BWUserType_IFsh1_TAddress
#define __BWUserType_IFsh1_TAddress
   typedef word IFsh1_TAddress;        /* A type for address to the FLASH.*/
#endif
#ifndef __BWUserType_IFsh1_TDataAddress
#define __BWUserType_IFsh1_TDataAddress
  typedef byte *IFsh1_TDataAddress;    /* A type for data address. */
#endif


byte IFsh1_SetByteFlash(IFsh1_TAddress Addr, byte Data);
/*
** ===================================================================
**     Method      :  IFsh1_SetByteFlash (component IntFLASH)
**
**     Description :
**         Write byte to address in FLASH.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Addr            - Address to FLASH.
**         Data            - Data to write.
**     Returns     :
**         ---             - Error code, possible codes:
**                           - ERR_OK - OK
**                           - ERR_NOTAVAIL - Desired program/erase
**                           operation is not available
**                           - ERR_RANGE - Address is out of range
**                           - ERR_VALUE - Read value is not equal to
**                           written value
**                           - ERR_SPEED - This device does not work
**                           in the active speed mode
** ===================================================================
*/

byte IFsh1_SetWordFlash(IFsh1_TAddress Addr, word Data);
/*
** ===================================================================
**     Method      :  IFsh1_SetWordFlash (component IntFLASH)
**
**     Description :
**         Write word to address in FLASH.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Addr            - Address to FLASH.
**         Data            - Data to write.
**     Returns     :
**         ---             - Error code, possible codes:
**                           - ERR_OK - OK
**                           - ERR_NOTAVAIL - Desired program/erase
**                           operation is not available
**                           - ERR_RANGE - Address is out of range
**                           - ERR_VALUE - Read value is not equal to
**                           written value
**                           - ERR_SPEED - This device does not work
**                           in the active speed mode
** ===================================================================
*/

#define IFsh1_SetBlockFlash(Source,Dest,Count) \
  IFsh1_WriteBlock((IFsh1_TAddress)(Source), (Dest), (Count))
/*
** ===================================================================
**     Method      :  IFsh1_SetBlockFlash (component IntFLASH)
**
**     Description :
**         Writes data to FLASH.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Source          - Source address of the data
**         Dest            - Destination address in FLASH
**         Count           - Count of the data fields in the
**                           smallest addressable units.
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

byte IFsh1_GetBlockFlash(IFsh1_TAddress Source, IFsh1_TDataAddress Dest, word Count);
/*
** ===================================================================
**     Method      :  IFsh1_GetBlockFlash (component IntFLASH)
**
**     Description :
**         Reads data from FLASH.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Source          - Source address of the data.
**         Dest            - Destination address
**         Count           - Count of the data fields in the
**                           smallest addressable units.
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

byte IFsh1_EraseSector(IFsh1_TAddress Addr);
/*
** ===================================================================
**     Method      :  IFsh1_EraseSector (component IntFLASH)
**
**     Description :
**         Erase sector to which address Addr belongs.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Addr            - Address in FLASH.
**     Returns     :
**         ---             - Error code, possible codes:
**                           - ERR_OK - OK
**                           - ERR_NOTAVAIL - Desired program/erase
**                           operation is not available
**                           - ERR_RANGE - Address is out of range
**                           - ERR_SPEED - This device does not work
**                           in the active speed mode
** ===================================================================
*/

void IFsh1_Init(void);
/*
** ===================================================================
**     Method      :  IFsh1_Init (component IntFLASH)
**
**     Description :
**         Description_Init - Initializes the associated peripheral(s) 
**         and the component's internal variables. The method is called 
**         automatically as a part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

#define IFsh1_DataPtr2Addr(_Val) ((IFsh1_TAddress)_Val)
/*
** ===================================================================
**     Method      :  IFsh1_DataPtr2Addr (component IntFLASH)
**
**     Description :
**         This method converts data pointer to format of a component 
**         method address parameter. Generally a data pointer format is
**         different from format of a method Addr parameter.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * Addr            - Data pointer.
**     Returns     :
**         ---             - Address in the format used in the component
**                           methods.
** ===================================================================
*/

#define IFsh1_FuncPtr2Addr(_Val) ((IFsh1_TAddress)_Val)
/*
** ===================================================================
**     Method      :  IFsh1_FuncPtr2Addr (component IntFLASH)
**
**     Description :
**         This method converts function pointer to format of a component
**         method address parameter. Generally a function pointer
**         format is different from format of a method Addr parameter.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * Addr            - Function pointer.
**     Returns     :
**         ---             - Address in the format used in the component
**                           methods.
** ===================================================================
*/


byte IFsh1_NonDestructiveUnsecureWrite(IFsh1_TAddress src, IFsh1_TAddress dst, word size);
/*
** ===================================================================
**     Method      :  NonDestructiveUnsecureWrite (component IntFLASH)
**
**     Description :
**         This method performs Non-destructive unsecure write.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

byte IFsh1_WriteBlock(IFsh1_TAddress src, IFsh1_TAddress dst, word size);
/*
** ===================================================================
**     Method      :  WriteBlock (component IntFLASH)
**
**     Description :
**         The method writes block of data to a flash memory.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

/* END IFsh1. */

#endif /* ifndef __IFsh1 */
/*
** ###################################################################
**
**     This file was created by Processor Expert 3.09 [04.41]
**     for the Freescale HCS08 series of microcontrollers.
**
** ###################################################################
*/
